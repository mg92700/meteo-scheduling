version: '3.8'
services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_DB: meteobatch
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - my-network
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - my-network
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 256M

  meteo-batch:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/meteobatch
      SPRING_DATASOURCE_USERNAME: myuser
      SPRING_DATASOURCE_PASSWORD: mypassword
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USERNAME: guest
      RABBITMQ_PASSWORD: guest
    ports:
      - "8082:8082"
    depends_on:
      - postgres
    networks:
      - my-network
    deploy:
      resources:
        limits:
          cpus: '1.00'
          memory: 1G

  api-meteo:
    build:
      context: C:\dev\back-end\api-meteo\
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    networks:
      - my-network
    deploy:
      resources:
        limits:
          cpus: '1.00'
          memory: 1G

  notification-async:
    build:
      context: C:\dev\back-end\notification-async\
      dockerfile: Dockerfile
    environment:
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USERNAME: guest
      RABBITMQ_PASSWORD: guest
      MAIL_HOST: smtp-mail.outlook.com
      MAIL_USERNAME:
      MAIL_PASSWORD:
      MAIL_SMTP_AUTH: true
      MAIL_SMTP_STARTTLS_ENABLE: true
      MAIL_SMTP_CONNECT_TIMEOUT: 5000
      MAIL_SMTP_TIMEOUT: 3000
      MAIL_SMTP_WRITE_TIMEOUT: 5000
      MAIL_STORE_PROTOCOL: pop3
    ports:
      - "8083:8083"
    networks:
      - my-network
    deploy:
      resources:
        limits:
          cpus: '1.00'
          memory: 1G
volumes:
  postgres-data:

networks:
  my-network:
    driver: bridge